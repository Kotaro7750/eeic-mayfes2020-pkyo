import Blockly from "blockly";

Blockly.Blocks["lightswitch"] = {
  init: function() {
    this.appendDummyInput()
      .appendField("Turn")
      .appendField(
        new Blockly.FieldDropdown([
          ["red", "red"],
          ["blue", "blue"]
        ]),
        "lightcolor"
      )
      .appendField(
        new Blockly.FieldDropdown([
          ["on", "T"],
          ["off", "F"]
        ]),
        "switch"
      );
    this.setColour(270);
    this.setTooltip("");
    this.setHelpUrl("");
  }
};

Blockly.JavaScript["lightswitch"] = function(block) {
  var dropdown_lightcolor = block.getFieldValue("lightcolor");
  console.log(dropdown_lightcolor);
  var dropdown_switch = block.getFieldValue("switch");
  // TODO: Assemble JavaScript into code variable.
  if (dropdown_switch == "F") {
    var code =
      'document.getElementById("circle").style.backgroundColor="white";\n';
    return code;
  } else {
    var code =
      'document.getElementById("circle").style.backgroundColor="' +
      dropdown_lightcolor +
      '";\n';
    return code;
  }
};

//set options
var options = {
  toolbox: document.getElementById("toolbox"),
  collapse: true,
  comments: true,
  disable: true,
  maxBlocks: Infinity,
  trashcan: true,
  horizontalLayout: false,
  toolboxPosition: "start",
  css: true,
  rtl: false,
  scrollbars: true,
  sounds: true,
  oneBasedIndex: true,
  grid: {
    spacing: 20,
    length: 1,
    colour: "#888",
    snap: true
  }
};

//put the toolbox in the workspace
var workspace = Blockly.inject("blocklyDiv", options);
// take the text generated by the blocks and run it as code
function runCode() {
  window.LoopTrap = 1000;
  Blockly.JavaScript.INFINITE_LOOP_TRAP =
    'if (--window.LoopTrap == 0) throw "Infinite loop.";Â¥n';
  var code = Blockly.JavaScript.workspaceToCode(workspace);
  Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
  try {
    eval(code);
  } catch (e) {
    alert(e);
  }
}

const runcodeDom = document.getElementById("runcode");
runcodeDom.onclick = () => runCode();
